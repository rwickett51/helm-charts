apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    type: {{ .Values.strategyType }}
    {{- if eq .Values.strategyType "RollingUpdate" }}
    rollingUpdate:
      maxSurge: {{ .Values.maxSurge }}
      maxUnavailable: {{ .Values.maxUnavailable }}
    {{- end}}
  selector:
    matchLabels:
      app.kubernetes.io/part-of: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}-deployment
        app.kubernetes.io/part-of: {{ .Release.Name }}
    spec:
      nodeSelector:
        node-role.kubernetes.io/worker: worker
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
      - name: {{ .Release.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        resources:
        {{- toYaml .Values.resources | nindent 10 }}
        ports:
        - containerPort: {{ .Values.port }}
          name: http
          protocol: TCP
        volumeMounts:
        - name: config
          mountPath: "/etc/gitlab"
        - name: data
          mountPath: "/var/opt/gitlab"
        - name: logs
          mountPath: "/var/log/gitlab"
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-config-pvc
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-data-pvc
      - name: logs
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-logs-pvc